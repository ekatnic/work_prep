}
}
# B. Data Management – Using R
library("e1071")
library(readxl)
library(dplyr)
setwd("~/Desktop/work_prep")
data <- read_excel("data/cars.xlsm")
create_norm_dist_skew <- function(){
x <- seq(0, 10, length=1000)
y <- dnorm(x, mean=5, sd=2)
return(skewness(y))
}
create_trans_frame <- function(column_data, norm_skew){
cube <- skewness(column_data^3)
square <- skewness(column_data^2)
identity <- skewness(column_data)
square_root <- skewness(column_data^(1/2))
cube_root <- skewness(column_data^(1/3))
logarithmic <- skewness(log(column_data))
recip_root <- skewness(-column_data^(-1/2))
recip <- skewness(-column_data^(-1))
recip_square <- skewness(-column_data^(-2))
trans_type <- c("cube", "square", "identity","square_root", "cube_root",
"logarithmic", "recip_root", "recip", "recip_square")
skew_value <- c(cube, square, identity, square_root, cube_root, logarithmic,
recip_root, recip, recip_square)
skew_diff <- c(abs(skew_value) - abs(norm_skew))
trans_frame <- data.frame(trans_type, skew_value, skew_diff)
return(trans_frame)
}
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
print(transform_data_chart(best_trans, column_data))
}
}
}
transform_data_chart <- function(trans_type, data){
transformed_data <- data.frame("orig_data" = data)
if(trans_type == "cube"){
data = data^3
} else if(trans_type == "square"){
data = data^2
} else if(trans_type == "square_root"){
data = data^(1/2)
} else if(trans_type == "logarithmic"){
data = log(data)
} else if(trans_type == "recip_root"){
data = data^(-1/2)
}else if(trans_type == "recip"){
data = -data^(-1)
}else if(trans_type == "recip_square"){
data = -data^(-2)
}
transformed_data$trans_data <- data
return(transformed_data)
}
transform(c("V10", "V11", "V12"))
trans_frame
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
print(transformed_data)
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
}
}
# B. Data Management – Using R
library("e1071")
library(readxl)
library(dplyr)
setwd("~/Desktop/work_prep")
data <- read_excel("data/cars.xlsm")
create_norm_dist_skew <- function(){
x <- seq(0, 10, length=1000)
y <- dnorm(x, mean=5, sd=2)
return(skewness(y))
}
create_trans_frame <- function(column_data, norm_skew){
cube <- skewness(column_data^3)
square <- skewness(column_data^2)
identity <- skewness(column_data)
square_root <- skewness(column_data^(1/2))
cube_root <- skewness(column_data^(1/3))
logarithmic <- skewness(log(column_data))
recip_root <- skewness(-column_data^(-1/2))
recip <- skewness(-column_data^(-1))
recip_square <- skewness(-column_data^(-2))
trans_type <- c("cube", "square", "identity","square_root", "cube_root",
"logarithmic", "recip_root", "recip", "recip_square")
skew_value <- c(cube, square, identity, square_root, cube_root, logarithmic,
recip_root, recip, recip_square)
skew_diff <- c(abs(skew_value) - abs(norm_skew))
trans_frame <- data.frame(trans_type, skew_value, skew_diff)
return(trans_frame)
}
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
print(transformed_data)
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
}
}
transform_data_chart <- function(trans_type, data){
transformed_data <- data.frame("orig_data" = data)
if(trans_type == "cube"){
data = data^3
} else if(trans_type == "square"){
data = data^2
} else if(trans_type == "square_root"){
data = data^(1/2)
} else if(trans_type == "logarithmic"){
data = log(data)
} else if(trans_type == "recip_root"){
data = data^(-1/2)
}else if(trans_type == "recip"){
data = -data^(-1)
}else if(trans_type == "recip_square"){
data = -data^(-2)
}
transformed_data$trans_data <- data
return(transformed_data)
}
transform(c("V10", "V11", "V12"))
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
head(transformed_data)
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
}
}
data <- read_excel("data/cars.xlsm")
transform(c("V10", "V11", "V12"))
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
print(head(transformed_data))
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
}
}
data <- read_excel("data/cars.xlsm")
transform(c("V10", "V11", "V12"))
data <- read_excel("data/cars.xlsm")
transform(names(dplyr::select_if(data,is.numeric)))
data <- read_excel("data/cars.xlsm")
transform("V14")
column_name <- "V14"
norm_skew <- create_norm_dist_skew()
column_data <- data[[column_name]]
data <- read_excel("data/cars.xlsm")
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
print(head(transformed_data))
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
best_trans$trans_type
recip == recip_root
"recip"== "recip_root"
if(trans_type == "recip_root"){
print("error")}
trans_type <- best_trans
if(trans_type == "recip_root"){
print("error")}
View(trans_frame)
trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
trans_frame %>% filter(skew_diff == min(abs(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
# B. Data Management – Using R
library("e1071")
library(readxl)
library(dplyr)
setwd("~/Desktop/work_prep")
data <- read_excel("data/cars.xlsm")
create_norm_dist_skew <- function(){
x <- seq(0, 10, length=1000)
y <- dnorm(x, mean=5, sd=2)
return(skewness(y))
}
create_trans_frame <- function(column_data, norm_skew){
cube <- skewness(column_data^3)
square <- skewness(column_data^2)
identity <- skewness(column_data)
square_root <- skewness(column_data^(1/2))
cube_root <- skewness(column_data^(1/3))
logarithmic <- skewness(log(column_data))
recip_root <- skewness(-column_data^(-1/2))
recip <- skewness(-column_data^(-1))
recip_square <- skewness(-column_data^(-2))
trans_type <- c("cube", "square", "identity","square_root", "cube_root",
"logarithmic", "recip_root", "recip", "recip_square")
skew_value <- c(cube, square, identity, square_root, cube_root, logarithmic,
recip_root, recip, recip_square)
skew_diff <- c(abs(skew_value) - abs(norm_skew))
trans_frame <- data.frame(trans_type, skew_value, skew_diff)
return(trans_frame)
}
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(abs(trans_frame$skew_diff))) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
print(head(transformed_data))
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
}
}
transform_data_chart <- function(trans_type, data){
transformed_data <- data.frame("orig_data" = data)
if(trans_type == "cube"){
data = data^3
} else if(trans_type == "square"){
data = data^2
} else if(trans_type == "square_root"){
data = data^(1/2)
} else if(trans_type == "logarithmic"){
data = log(data)
} else if(trans_type == "recip_root"){
data = data^(-1/2)
}else if(trans_type == "recip"){
data = -data^(-1)
}else if(trans_type == "recip_square"){
data = -data^(-2)
}
transformed_data$trans_data <- data
return(transformed_data)
}
transform(names(dplyr::select_if(data,is.numeric)))
data <- read_excel("data/cars.xlsm")
transform("V14")
norm_skew <- create_norm_dist_skew()
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
trans_frame <- create_trans_frame(column_data, norm_skew)
trans_frame
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(abs(trans_frame$skew_diff))) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
rans_frame %>% filter(skew_diff == min(abs(trans_frame$skew_diff))) %>%
dplyr::select(trans_type)
trans_frame %>% filter(skew_diff == min(abs(trans_frame$skew_diff))) %>%
dplyr::select(trans_type)
min(abs(trans_frame$skew_diff))
skew_diff <- abs((abs(skew_value) - abs(norm_skew)))
# B. Data Management – Using R
library("e1071")
library(readxl)
library(dplyr)
setwd("~/Desktop/work_prep")
data <- read_excel("data/cars.xlsm")
create_norm_dist_skew <- function(){
x <- seq(0, 10, length=1000)
y <- dnorm(x, mean=5, sd=2)
return(skewness(y))
}
create_trans_frame <- function(column_data, norm_skew){
cube <- skewness(column_data^3)
square <- skewness(column_data^2)
identity <- skewness(column_data)
square_root <- skewness(column_data^(1/2))
cube_root <- skewness(column_data^(1/3))
logarithmic <- skewness(log(column_data))
recip_root <- skewness(-column_data^(-1/2))
recip <- skewness(-column_data^(-1))
recip_square <- skewness(-column_data^(-2))
trans_type <- c("cube", "square", "identity","square_root", "cube_root",
"logarithmic", "recip_root", "recip", "recip_square")
skew_value <- c(cube, square, identity, square_root, cube_root, logarithmic,
recip_root, recip, recip_square)
skew_diff <- abs((abs(skew_value) - abs(norm_skew)))
trans_frame <- data.frame(trans_type, skew_value, skew_diff)
return(trans_frame)
}
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
print(head(transformed_data))
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
}
}
transform_data_chart <- function(trans_type, data){
transformed_data <- data.frame("orig_data" = data)
if(trans_type == "cube"){
data = data^3
} else if(trans_type == "square"){
data = data^2
} else if(trans_type == "square_root"){
data = data^(1/2)
} else if(trans_type == "logarithmic"){
data = log(data)
} else if(trans_type == "recip_root"){
data = data^(-1/2)
}else if(trans_type == "recip"){
data = -data^(-1)
}else if(trans_type == "recip_square"){
data = -data^(-2)
}
transformed_data$trans_data <- data
return(transformed_data)
}
transform("V14")
# B. Data Management – Using R
library("e1071")
library(readxl)
library(dplyr)
setwd("~/Desktop/work_prep")
data <- read_excel("data/cars.xlsm")
create_norm_dist_skew <- function(){
x <- seq(0, 10, length=1000)
y <- dnorm(x, mean=5, sd=2)
return(skewness(y))
}
create_trans_frame <- function(column_data, norm_skew){
cube <- skewness(column_data^3)
square <- skewness(column_data^2)
identity <- skewness(column_data)
square_root <- skewness(column_data^(1/2))
cube_root <- skewness(column_data^(1/3))
logarithmic <- skewness(log(column_data))
recip_root <- skewness(-column_data^(-1/2))
recip <- skewness(-column_data^(-1))
recip_square <- skewness(-column_data^(-2))
trans_type <- c("cube", "square", "identity","square_root", "cube_root",
"logarithmic", "recip_root", "recip", "recip_square")
skew_value <- c(cube, square, identity, square_root, cube_root, logarithmic,
recip_root, recip, recip_square)
skew_diff <- abs((abs(skew_value) - abs(norm_skew)))
trans_frame <- data.frame(trans_type, skew_value, skew_diff)
return(trans_frame)
}
transform <- function(column_names){
norm_skew <- create_norm_dist_skew()
for(column_name in column_names){
column_data <- data[[column_name]]
data_table <- table(column_data)
print(paste0(column_name, ":"))
data_table
data_skew <- skewness(column_data)
print(paste("Skewness:", data_skew))
# Unsure how to test significant difference in skewness,
# however, skewness values of over .5 are typically considered
# moderately skew
if(data_skew > .5){
trans_frame <- create_trans_frame(column_data, norm_skew)
print.data.frame(trans_frame)
best_trans <- trans_frame %>% filter(skew_diff == min(trans_frame$skew_diff)) %>%
dplyr::select(trans_type)
print(paste("Performing", best_trans$trans_type, "transformation:"))
transformed_data <-  transform_data_chart(best_trans, column_data)
print(head(transformed_data))
print(paste("New Skewness:", skewness(transformed_data$trans_data)))
}
}
}
transform_data_chart <- function(trans_type, data){
transformed_data <- data.frame("orig_data" = data)
if(trans_type == "cube"){
data = data^3
} else if(trans_type == "square"){
data = data^2
} else if(trans_type == "square_root"){
data = data^(1/2)
} else if(trans_type == "logarithmic"){
data = log(data)
} else if(trans_type == "recip_root"){
data = data^(-1/2)
}else if(trans_type == "recip"){
data = -data^(-1)
}else if(trans_type == "recip_square"){
data = -data^(-2)
}
transformed_data$trans_data <- data
return(transformed_data)
}
transform(names(dplyr::select_if(data,is.numeric)))
transformTukey(data, start=-3, end=3, int = .25)
transformTukey(data$V10, start=-3, end=3, int = .25)
